accessible: true
author: Paulin Eliat-Eliat Anthony Doeraene
categories: []
contact_url: ''
context: |
    As you perhaps already know, in Linux : *"everything is a file"*. Indeed, even folders are actually files!
    The two most important type of files are regular files and folders.

    Moreover, the structures of files in Linux can be represented as a tree, with "/" the root of all files.

    You must implement a function called :code:`get_number_of_files` which will take a path in argument,
    and return the number of regular files contained in this path (or in sub-folder).
    If the path doesn't exist, your function should return -1;

    *Hint : Implementing a recursive functions is easier and efficient !*

    For example:

        - For the folder *Documents*, which contains : *a*, *b* et *c* (3 regular files) : :code:`get_number_of_files("./Documents")` returns :code:`3`

        - For the folder *Home*, which contains the folder *Documents* (see above), and the folder *Downloads* which itself contains : *d* (regular file) et *y* (folder). *y* contains only *e* (regular file). :code:`get_number_of_files("./Home")` returns :code:`5`

    N.B.: We recommend you to use these functions of the standard library :  `stat <https://man7.org/linux/man-pages/man2/lstat.2.html>`_, `S_ISREG <https://linux.die.net/man/2/stat>`_, `opendir <https://man7.org/linux/man-pages/man3/opendir.3.html>`_, `readdir <https://man7.org/linux/man-pages/man3/readdir.3.html>`_.

    Be careful that readdir return also the path to :code:`"."` et :code:`".."` in a folder. You should ignore these path, otherwise, it will create infinite loops.
environment_id: cpp
environment_parameters:
    limits:
        time: '30'
        hard_time: ''
        memory: '100'
    run_cmd: ''
environment_type: docker
evaluate: best
file: ''
groups: false
input_random: 0
name: Number of files
network_grading: false
problems:
    number_files:
        type: code
        name: Get Number Files
        header: |4-
                .. code-block:: c

                    /*
                     *@pre path is a string containing the path to an hypothetical folder/file
                     *@post return - number of files contained in "path"
                     *              - -1 if the path doesn't exists
                     *              - -2 if opendir failed
                     */
                    int get_number_of_files (const char *path){
        language: c
        default: ''
stored_submissions: 0
submission_limit:
    amount: -1
    period: -1
weight: 1.0
